Git Workflow Overview
Working Directory → Staging Area → Local Repository → Cloud Repository:

This is the typical workflow in Git. You edit files in the working directory, stage them for tracking, commit them to your local repository, and finally push them to a remote (cloud) repository.

Git Commands and Explanations
git init:

Used once to initialize a folder as a Git repository (to start tracking changes).

git add:

Moves files from the working directory to the staging area for tracking.

Common variations:

git add . → Adds all files in the current directory.

git add -A → Stages all changes (including deletions).

git commit:

Saves the changes from the staging area to your local repository.

Think of it as creating a version of your changes.

git push:

Sends committed changes from the local repository to the remote/cloud repository (e.g., GitHub).

Branching Concept
Branches in Git:

Git uses branches to manage different versions of a project. By default, the main branch is usually called master (or main in newer setups).

If multiple people are working on the same project, they can create their own branches to avoid conflicts.

Additional Commands
git log:

Displays the history of commits in the project, including timestamps and unique commit IDs.

git show <commit_id>:

Provides detailed information about changes in a specific commit.

git remote add <short-name> <git-repository-link>:

Connects your local repository to a remote repository by adding the remote repository's link (e.g., GitHub).